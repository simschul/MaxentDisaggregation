% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rshares.R
\name{rdirichlet}
\alias{rdirichlet}
\title{Generate random numbers from a Dirichlet distribution (adjusted for small alpha)}
\usage{
rdirichlet(n, shares, gamma, threshold = 0.01)
}
\arguments{
\item{n}{Integer. Sample size.}

\item{shares}{Numeric vector of best-guess (mean) values for the shares. Must sum to 1.}

\item{gamma}{Numeric. Concentration parameter (\eqn{\gamma}).}

\item{threshold}{Numeric. All values in \code{shares} multiplied by \code{gamma}
that are below this threshold use the fallback parametrization (default: \code{1e-2}).}
}
\value{
A numeric matrix of dimension \code{n} times \code{length(shares)}, with
each row a single Dirichlet random deviate.
}
\description{
Extends a standard Dirichlet random generator by adding a concentration parameter
(\eqn{\gamma}).
For each variable \eqn{i} whose mean value (\eqn{\alpha_i = \gamma \cdot share_i})
is below a specified \code{threshold}, a fallback parametrization of the Gamma distribution
is applied to avoid zero or near-zero sampling. This is especially useful for very
small shape parameters, which can cause numerical issues in \code{\link[=rgamma]{rgamma()}}.
}
\details{
This pragmatic workaround sets:
\itemize{
\item \eqn{\alpha_i = 1} (shape) for shares below \code{threshold}
\item \eqn{rate = 1 / \alpha_i}
}

ensuring less extreme values.

For more details, see the discussion in \code{\link[=rgamma]{rgamma()}} under "small shape values" and
the references there. This approach helps mitigate issues where numeric precision
can push small Gamma-distributed values to zero.
}
\examples{
rdirichlet(5, c(0.2, 0.3, 0.5), gamma = 10, threshold = 1e-2)
}
\seealso{
\code{\link[=rdirichlet_standard]{rdirichlet_standard()}}, \code{\link[=rgamma]{rgamma()}}
}
