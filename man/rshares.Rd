% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rshares.R
\name{rshares}
\alias{rshares}
\title{Generate random shares that always sum to 1}
\usage{
rshares(
  n,
  shares,
  sds = NULL,
  na_action = c("fill", "remove"),
  max_iter = 1000,
  threshold_shares = 0.1,
  threshold_sd = 0.2,
  grad_based = FALSE,
  ...
)
}
\arguments{
\item{n}{Integer, number of draws.}

\item{shares}{Numeric vector of best-guess means; may contain \code{NA}.}

\item{sds}{Numeric vector of SDs; may contain \code{NA}.}

\item{na_action}{\code{"fill"} (default) or \code{"remove"} – only used for full
NA vectors, exactly as before.}

\item{max_iter}{Passed to \code{\link[=rbeta3]{rbeta3()}} (unchanged).}

\item{threshold_shares}{Relative deviation tolerated for the mean (10 \%).}

\item{threshold_sd}{Relative deviation tolerated for the SD   (20 \%).}

\item{grad_based, }{...  Forwarded to \code{find_gamma_maxent()} if you
want to switch to the gradient-based solver there.}

\item{...}{Additional arguments passed on to \code{\link[=rbeta3]{rbeta3()}} or other internal functions.}
}
\value{
A numeric matrix of dimension \code{n} times \code{length(shares)}, with
each row summing to 1.

A numeric matrix \verb{n × length(shares)}; every row sums to 1.
}
\description{
This function combines different approaches for generating shares (Dirichlet,
Generalised Dirichlet, Beta) in a single workflow, depending on the information
provided by \code{shares} and \code{sds}. All generated vectors sum to 1.
}
\details{
The logic is:

•  If every share has an SD  → generalised Dirichlet
•  If only means are given   → maximum-entropy Dirichlet
•  If \emph{nothing} is known     → uniform Dirichlet
•  Mixed cases               → two-level scheme identical to Python

After sampling it checks how far the empirical mean / SD of every
column deviates from the targets and issues warnings when the
tolerances are exceeded.
}
\examples{
# Example with no SDs -> uses rdirichlet_maxent
rshares(5, c(0.1, 0.3, 0.6))

# Example with means & SDs for all -> uses rdirichlet_generalised
rshares(5, c(0.1, 0.3, 0.6), c(0.05, 0.07, 0.02))

# 'na_action' example: fill missing shares to sum to 1
rshares(5, c(NA, 0.2, 0.3) , na_action = "fill")



}
\seealso{
\code{\link[=rdirichlet_generalised]{rdirichlet_generalised()}}, \code{\link[=rdirichlet_maxent]{rdirichlet_maxent()}}, \code{\link[=rbeta3]{rbeta3()}}
}
